package org.kingsski.wax.export;

import org.junit.Test;
import org.kingsski.wax.data.Race;
import org.kingsski.wax.data.Team;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertTrue;

/**
 * Created by Barnesly on 02/05/2017.
 */
public class RaceListWriterAndroidPdfTest {
    @Test
    public void writeRaceList() throws Exception {
        RaceListWriterAndroidPdf writer = new RaceListWriterAndroidPdf();
        List<Race> races = new ArrayList<>(64);
        Race race1 = new Race();
        race1.setRaceNo(1);
        race1.setTeamOne(0);
        race1.setTeamTwo(1);
        Race race2 = new Race();
        race2.setRaceNo(2);
        race2.setTeamOne(1);
        race2.setTeamTwo(2);
        Race race3 = new Race();
        race3.setRaceNo(3);
        race3.setTeamOne(2);
        race3.setTeamTwo(0);
        race1.setDivision("M");
        race2.setDivision("M");
        race3.setDivision("M");
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        race1 = new Race();
        race1.setRaceNo(4);
        race1.setTeamOne(0);
        race1.setTeamTwo(1);
        race2 = new Race();
        race2.setRaceNo(5);
        race2.setTeamOne(1);
        race2.setTeamTwo(2);
        race3 = new Race();
        race3.setRaceNo(6);
        race3.setTeamOne(2);
        race3.setTeamTwo(0);
        race1.setDivision("L");
        race2.setDivision("L");
        race3.setDivision("L");
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        race1 = new Race();
        race1.setRaceNo(7);
        race1.setTeamOne(0);
        race1.setTeamTwo(1);
        race2 = new Race();
        race2.setRaceNo(8);
        race2.setTeamOne(1);
        race2.setTeamTwo(2);
        race3 = new Race();
        race3.setRaceNo(9);
        race3.setTeamOne(2);
        race3.setTeamTwo(0);
        race1.setDivision("B");
        race2.setDivision("B");
        race3.setDivision("B");
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        race1 = new Race();
        race1.setRaceNo(10);
        race1.setTeamOne(0);
        race1.setTeamTwo(1);
        race2 = new Race();
        race2.setRaceNo(11);
        race2.setTeamOne(1);
        race2.setTeamTwo(2);
        race3 = new Race();
        race3.setRaceNo(12);
        race3.setTeamOne(2);
        race3.setTeamTwo(0);
        race1.setDivision("M");
        race2.setDivision("M");
        race3.setDivision("M");
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        race1 = new Race();
        race1.setRaceNo(13);
        race1.setTeamOne(0);
        race1.setTeamTwo(1);
        race2 = new Race();
        race2.setRaceNo(14);
        race2.setTeamOne(1);
        race2.setTeamTwo(2);
        race3 = new Race();
        race3.setRaceNo(15);
        race3.setTeamOne(2);
        race3.setTeamTwo(0);
        race1.setDivision("L");
        race2.setDivision("L");
        race3.setDivision("L");
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);
        race1 = new Race();
        race1.setRaceNo(16);
        race1.setTeamOne(0);
        race1.setTeamTwo(1);
        race2 = new Race();
        race2.setRaceNo(17);
        race2.setTeamOne(1);
        race2.setTeamTwo(2);
        race3 = new Race();
        race3.setRaceNo(18);
        race3.setTeamOne(2);
        race3.setTeamTwo(0);
        race1.setDivision("B");
        race2.setDivision("B");
        race3.setDivision("B");
        races.add(race1);
        races.add(race2);
        races.add(race3);
        races.add(race1);
        races.add(race2);
        races.add(race3);

        List<Team> teams = new ArrayList<>(4);
        Team team1 = new Team();
        team1.setTeamId(0);
        team1.setTeamName("Team one");
        teams.add(team1);
        Team team2 = new Team();
        team2.setTeamId(1);
        team2.setTeamName("Team two");
        teams.add(team2);
        Team team3 = new Team();
        team3.setTeamId(2);
        team3.setTeamName("Team three");
        teams.add(team3);

        assertTrue(writer.writeRaceList(races, teams, new File("C:\\Users\\Barnesly\\output.pdf"), "UTF-8"));
    }

}